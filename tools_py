import os
import subprocess
import threading

# List of required tools and their corresponding package names
tools = {
    "whois": "whois",
    "dig": "dnsutils",
    "nslookup": "dnsutils",
    "nmap": "nmap",
    "subfinder": "subfinder",
    "theHarvester": "theharvester"
}

def is_tool_installed(tool):
    """Check if a tool is installed"""
    result = subprocess.run(["which", tool], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    return result.returncode == 0

def install_tool(tool_name, package_name):
    """Install a tool using apt if not installed"""
    print(f"[+] Checking {tool_name}...")
    if is_tool_installed(tool_name):
        print(f"    ✅ {tool_name} is already installed.")
    else:
        print(f"    ❌ {tool_name} is missing. Installing...")
        os.system(f"sudo apt install -y {package_name}")

def remove_unwanted_packages():
    """Remove unused packages and clean up"""
    print("[+] Removing unnecessary packages...")
    os.system("sudo apt-get autoremove -y && sudo apt-get clean")

def update_system():
    """Update system packages"""
    print("[+] Updating system...")
    os.system("sudo apt update -y && sudo apt upgrade -y")

def install_tools_parallel():
    """Install required tools in parallel"""
    threads = []
    for tool, package in tools.items():
        thread = threading.Thread(target=install_tool, args=(tool, package))
        threads.append(thread)
        thread.start()
    
    # Wait for all threads to finish
    for thread in threads:
        thread.join()

def main():
    """Install required tools and clean up"""
    print("========================================")
    print("   Automatic Tool Installer for Recon   ")
    print("========================================")

    update_system()  # Update system

    install_tools_parallel()  # Install tools in parallel

    remove_unwanted_packages()  # Auto-remove unnecessary packages

    print("========================================")
    print("✅ All required tools are installed!")
    print("✅ Unused packages have been removed.")
    print("========================================")

if __name__ == "__main__":
    main()

